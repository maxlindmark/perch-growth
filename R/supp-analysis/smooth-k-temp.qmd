---
title: "Smooth k~temperature models instead of Sharpe-Schoolfield?"
author: "Max Lindmark, Jan Ohlberger, Anna GÃ¥rdmark"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    code-fold: true
    embed-resources: true
    fig-width: 12
    fig-height: 10
editor: source
execute: 
  echo: true
  eval: true
  cache: true
---

```{r setup, include = FALSE, cache=FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.width = 12,
  fig.asp = 0.618,
  fig.align ='center'
)
```

## Load libraries

```{r}
#| cache=FALSE
pkgs <- c("tidyverse", "tidylog", "sdmTMB", "RColorBrewer", "viridis")

## minpack.lm needed if using nlsLM()
if(length(setdiff(pkgs, rownames(installed.packages()))) > 0){

    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library,character.only = T))

# devtools::install_github("seananderson/ggsidekick") ## not on CRAN 
library(ggsidekick)
theme_set(theme_sleek())

# Check the temperature model script! This is the order based on mean temperature, which makes sense for the sharpe schoolfield plot, and therefore we might keep it across plots
order <- data.frame(area = c("SI_HA", "BT", "TH", "SI_EK", "FM", "JM", "MU", "FB", "VN", "HO", "BS", "RA")) 

nareas <- length(unique(order))
colors <- colorRampPalette(brewer.pal(name = "RdYlBu", n = 10))(nareas)

# Load functions
home <- here::here()
# fxn <- list.files(paste0(home, "/R/functions"))
# invisible(sapply(FUN = source, paste0(home, "/R/functions/", fxn)))
```

## Read and trim data

```{r}
VBG <- read_csv(paste0(home, "/output/vbg.csv"))
```

## Fit smooth models of k vs temperature

```{r}
preds <- list()

for(a in unique(VBG$area)) {
  
  d <- filter(VBG, area == a)

  
  m <- sdmTMB(k_mean ~ s(temp, k = 3), 
              data = d,
              spatial = "off",
              spatiotemporal = "off"#,
              #family = student(df = 6)
              )
  
  res <- residuals(m)
  qqnorm(res); qqline(res)
  
  nd <- data.frame(area = a,
                   temp = seq(min(d$temp), max(d$temp), length.out = 50))
  
  nd$pred <- predict(m, newdata = nd)$est
    
  print(ggplot(nd, aes(temp, pred)) +
    geom_point(data = d, aes(temp, k_median), inherit.aes = FALSE) + 
    geom_line())

  preds <- bind_rows(preds, nd)
    
}


  m_all <- sdmTMB(k_mean ~ s(temp, k = 5), 
                  data = VBG,
                  spatial = "off",
                  spatiotemporal = "off"#,
                  #family = student(df = 6)
                  )
  
  res_all <- residuals(m_all)
  qqnorm(res_all); qqline(res_all)
  
  nd_all <- data.frame(temp = seq(min(VBG$temp), max(VBG$temp), length.out = 50))
  
  nd_all$pred <- predict(m_all, newdata = nd_all)$est
    
  ggplot(nd_all, aes(temp, pred)) +
    geom_point(data = VBG, aes(temp, k_median), inherit.aes = FALSE) + 
    geom_line()


preds |>
  ggplot(aes(temp, pred, color = factor(area, order$area))) + 
  geom_point(data = VBG, aes(temp, k_median, color = factor(area, order$area)), size = 0.6) +
  geom_line(aes(temp, pred, group = factor(area)), linewidth = 1) +
  geom_line(data = nd_all, aes(temp, pred),
            linewidth = 1, inherit.aes = FALSE, linetype = 2) +
  #scale_color_manual(values = colors, name = "Area") +
  scale_color_viridis(name = "Area", direction = -1, discrete = TRUE) +
  #facet_wrap(~area) +
  theme(plot.title = element_text(size = 15, face = "bold")) +
  theme(axis.text.x = element_text(angle = 0)) +
  theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15)) +
  guides(color = guide_legend(override.aes = list(size = 1))) +
  scale_x_continuous(breaks = seq(-5, 20, 1)) +
  labs(x = "Temperature (C)", y = "Median von Bertalanffy growth coefficient, k") +
  NULL
```
